"[int]FunctionID","[string]FunctionName","[string]SourceCode","[int]CRFVersionID","[string]Lang","[DateTime]Created","[DateTime]Updated","[DateTime]ServerSyncDate","[int]SourceObjectID","[DateTime]SourceCopyTime","[string]OID","[DateTime]UpdatedAfterSourceCopy","[bool]IsDraft","[string]SourceUrlId","[Guid]FunctionPID","[Guid]ExternalUUID","[int]ExternalVersionNumber"
"1","DSL_SQL_TEST","SELECT 1, 3
UNION ALL SELECT 2, 4
UNION ALL SELECT 3, 5","1","SQ","01/16/2021 01:41:17","01/16/2021 01:41:17","␀","0","01/16/2021 01:41:17","DSL_SQL_TEST","01/16/2021 01:41:17","True","␀","93c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"2","DSL_SQL_TEST","SELECT 1, 3
UNION ALL SELECT 2, 4
UNION ALL SELECT 3, 5","4","SQ","01/17/2021 02:32:11","01/17/2021 02:32:11","␀","0","01/16/2021 01:41:17","␀","01/16/2021 01:41:17","False","␀","94c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"3","DSL_SQL_TEST","SELECT 1, 3
UNION ALL SELECT 2, 4
UNION ALL SELECT 3, 5","5","SQ","01/25/2021 18:30:16","01/25/2021 18:30:16","␀","0","01/16/2021 01:41:17","␀","01/16/2021 01:41:17","False","␀","95c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"4","DSL_SQL_TEST","SELECT 1, 3
UNION ALL SELECT 2, 4
UNION ALL SELECT 3, 5","6","SQ","02/24/2021 21:08:23","02/24/2021 21:08:23","␀","0","01/16/2021 01:41:17","␀","01/16/2021 01:41:17","False","␀","96c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"5","DSL_SQL_TEST","SELECT 1, 3
UNION ALL SELECT 2, 4
UNION ALL SELECT 3, 5","7","SQ","03/08/2021 18:02:42","03/08/2021 18:02:42","␀","0","01/16/2021 01:41:17","␀","01/16/2021 01:41:17","False","␀","97c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"6","DSL_SQL_TEST","SELECT 1, 3
UNION ALL SELECT 2, 4
UNION ALL SELECT 3, 5","8","SQ","03/13/2021 02:44:42","03/13/2021 02:44:42","␀","0","01/16/2021 01:41:17","␀","01/16/2021 01:41:17","False","␀","98c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"7","DSL_SQL_TEST","SELECT 1, 3
UNION ALL SELECT 2, 4
UNION ALL SELECT 3, 5","9","SQ","03/18/2021 16:14:05","03/18/2021 16:14:05","␀","0","01/16/2021 01:41:17","␀","01/16/2021 01:41:17","False","␀","99c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"8","DSL_SQL_TEST","SELECT 1, 3
UNION ALL SELECT 2, 4
UNION ALL SELECT 3, 5","10","SQ","03/23/2021 15:51:06","03/23/2021 15:51:06","␀","0","01/16/2021 01:41:17","␀","01/16/2021 01:41:17","False","␀","9ac392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"9","DSL_SQL_TEST","SELECT 1, 3
UNION ALL SELECT 2, 4
UNION ALL SELECT 3, 5","11","SQ","03/25/2021 14:42:43","03/25/2021 14:42:43","␀","0","01/16/2021 01:41:17","␀","01/16/2021 01:41:17","False","␀","9bc392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"10","DSL_SQL_TEST","SELECT 1, 3
UNION ALL SELECT 2, 4
UNION ALL SELECT 3, 5","12","SQ","03/26/2021 14:08:16","03/26/2021 14:08:16","␀","0","01/16/2021 01:41:17","␀","01/16/2021 01:41:17","False","␀","9cc392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"11","CREATE_SUBJECT","ActionFunctionParams afp = (ActionFunctionParams) ThisObject;
DataPoint dp = afp.ActionDataPoint;
Record record = dp.Record;
Subject subject = record.Subject;
StudySite sourceSite = subject.StudySite;
// create our new subject //
int nextNum = sourceSite.Subjects.Count + 1;
var newSubject = new Subject(sourceSite);
newSubject.Name = ""CF_Subject"" + nextNum.ToString();
newSubject.Save();
sourceSite.Subjects.Add(newSubject);
sourceSite.Subjects.SaveAllObjects();
DataPoint subjNameDT = record.DataPoints.FindByFieldOID(""CFCSGN"");
subjNameDT.Enter(newSubject.Name, """", 0);
return null;","1","C#","03/29/2021 19:41:15","03/30/2021 03:44:27","␀","0","␀","CREATE_SUBJECT","␀","True","␀","9dc392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"12","READ_SUBJECT_NAME","ActionFunctionParams afp = (ActionFunctionParams) ThisObject;
Record afpRecord = afp.ActionDataPoint.Record;

DataPoint subjNameDT = afpRecord.DataPoints.FindByFieldOID(""CFSNON"");
if (subjNameDT != null && subjNameDT.Active)
{
	try
	{
	 DataPoint primaryFormSubjectName = CustomFunction.FetchAllDataPointsForOIDPath(""SUBJINI"",""SUBJID"",null,afpRecord.Subject)[0];
	 if (!CustomFunction.DataPointIsEmpty(primaryFormSubjectName))
	  subjNameDT.Enter(primaryFormSubjectName.Data, """", 0);
	}
	catch {}
}

return null;","1","C#","03/29/2021 20:16:37","03/29/2021 20:29:17","␀","0","␀","READ_SUBJECT_NAME","␀","True","␀","9ec392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"13","DSL_SQL_TEST","SELECT 1, 3
UNION ALL SELECT 2, 4
UNION ALL SELECT 3, 5","13","SQ","03/30/2021 03:47:13","03/30/2021 03:47:13","␀","0","01/16/2021 01:41:17","␀","01/16/2021 01:41:17","False","␀","9fc392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"14","CREATE_SUBJECT","ActionFunctionParams afp = (ActionFunctionParams) ThisObject;
DataPoint dp = afp.ActionDataPoint;
Record record = dp.Record;
Subject subject = record.Subject;
StudySite sourceSite = subject.StudySite;
// create our new subject //
int nextNum = sourceSite.Subjects.Count + 1;
var newSubject = new Subject(sourceSite);
newSubject.Name = ""CF_Subject"" + nextNum.ToString();
newSubject.Save();
sourceSite.Subjects.Add(newSubject);
sourceSite.Subjects.SaveAllObjects();
DataPoint subjNameDT = record.DataPoints.FindByFieldOID(""CFCSGN"");
subjNameDT.Enter(newSubject.Name, """", 0);
return null;","13","C#","03/30/2021 03:47:13","03/30/2021 03:47:13","␀","0","␀","␀","␀","False","␀","a0c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"15","READ_SUBJECT_NAME","ActionFunctionParams afp = (ActionFunctionParams) ThisObject;
Record afpRecord = afp.ActionDataPoint.Record;

DataPoint subjNameDT = afpRecord.DataPoints.FindByFieldOID(""CFSNON"");
if (subjNameDT != null && subjNameDT.Active)
{
	try
	{
	 DataPoint primaryFormSubjectName = CustomFunction.FetchAllDataPointsForOIDPath(""SUBJINI"",""SUBJID"",null,afpRecord.Subject)[0];
	 if (!CustomFunction.DataPointIsEmpty(primaryFormSubjectName))
	  subjNameDT.Enter(primaryFormSubjectName.Data, """", 0);
	}
	catch {}
}

return null;","13","C#","03/30/2021 03:47:13","03/30/2021 03:47:13","␀","0","␀","␀","␀","False","␀","a1c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"16","DSL_SQL_TEST","SELECT 1, 3
UNION ALL SELECT 2, 4
UNION ALL SELECT 3, 5","14","SQ","03/31/2021 18:28:49","03/31/2021 18:28:49","␀","0","01/16/2021 01:41:17","␀","01/16/2021 01:41:17","False","␀","a2c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"17","CREATE_SUBJECT","ActionFunctionParams afp = (ActionFunctionParams) ThisObject;
DataPoint dp = afp.ActionDataPoint;
Record record = dp.Record;
Subject subject = record.Subject;
StudySite sourceSite = subject.StudySite;
// create our new subject //
int nextNum = sourceSite.Subjects.Count + 1;
var newSubject = new Subject(sourceSite);
newSubject.Name = ""CF_Subject"" + nextNum.ToString();
newSubject.Save();
sourceSite.Subjects.Add(newSubject);
sourceSite.Subjects.SaveAllObjects();
DataPoint subjNameDT = record.DataPoints.FindByFieldOID(""CFCSGN"");
subjNameDT.Enter(newSubject.Name, """", 0);
return null;","14","C#","03/31/2021 18:28:49","03/31/2021 18:28:49","␀","0","␀","␀","␀","False","␀","a3c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"18","READ_SUBJECT_NAME","ActionFunctionParams afp = (ActionFunctionParams) ThisObject;
Record afpRecord = afp.ActionDataPoint.Record;

DataPoint subjNameDT = afpRecord.DataPoints.FindByFieldOID(""CFSNON"");
if (subjNameDT != null && subjNameDT.Active)
{
	try
	{
	 DataPoint primaryFormSubjectName = CustomFunction.FetchAllDataPointsForOIDPath(""SUBJINI"",""SUBJID"",null,afpRecord.Subject)[0];
	 if (!CustomFunction.DataPointIsEmpty(primaryFormSubjectName))
	  subjNameDT.Enter(primaryFormSubjectName.Data, """", 0);
	}
	catch {}
}

return null;","14","C#","03/31/2021 18:28:49","03/31/2021 18:28:49","␀","0","␀","␀","␀","False","␀","a4c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"19","MAP_MEXICO_TO_GMT","var afp = (ActionFunctionParams)ThisObject;
var dataPoint = afp.ActionDataPoint;
var dateTime = DateTime.ParseExact(dataPoint.Data.ToString(), ""d M yyyy HH mm ss"", System.Globalization.CultureInfo.InvariantCulture);
var timeZoneId1 = 67;
var utc1 = Timezone.GetUtcFromLocalTime(dateTime, timeZoneId1);
var markingGroupId1 = 1;
dataPoint.OpenQuery(markingGroupId1, utc1.ToString(), false);
var timeZoneId2 = 74;
var utc2 = Timezone.GetUtcFromLocalTime(dateTime, timeZoneId2);
var markingGroupId2 = 1;
dataPoint.OpenQuery(markingGroupId2, utc2.ToString(), false);
return true;","1","C#","04/01/2021 02:50:57","04/01/2021 02:50:57","␀","0","04/01/2021 02:50:57","MAP_MEXICO_TO_GMT","04/01/2021 02:50:57","True","␀","a5c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"20","DSL_SQL_TEST","SELECT 1, 3
UNION ALL SELECT 2, 4
UNION ALL SELECT 3, 5","15","SQ","04/01/2021 03:22:07","04/01/2021 03:22:07","␀","0","01/16/2021 01:41:17","␀","01/16/2021 01:41:17","False","␀","a6c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"21","CREATE_SUBJECT","ActionFunctionParams afp = (ActionFunctionParams) ThisObject;
DataPoint dp = afp.ActionDataPoint;
Record record = dp.Record;
Subject subject = record.Subject;
StudySite sourceSite = subject.StudySite;
// create our new subject //
int nextNum = sourceSite.Subjects.Count + 1;
var newSubject = new Subject(sourceSite);
newSubject.Name = ""CF_Subject"" + nextNum.ToString();
newSubject.Save();
sourceSite.Subjects.Add(newSubject);
sourceSite.Subjects.SaveAllObjects();
DataPoint subjNameDT = record.DataPoints.FindByFieldOID(""CFCSGN"");
subjNameDT.Enter(newSubject.Name, """", 0);
return null;","15","C#","04/01/2021 03:22:07","04/01/2021 03:22:07","␀","0","␀","␀","␀","False","␀","a7c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"22","READ_SUBJECT_NAME","ActionFunctionParams afp = (ActionFunctionParams) ThisObject;
Record afpRecord = afp.ActionDataPoint.Record;

DataPoint subjNameDT = afpRecord.DataPoints.FindByFieldOID(""CFSNON"");
if (subjNameDT != null && subjNameDT.Active)
{
	try
	{
	 DataPoint primaryFormSubjectName = CustomFunction.FetchAllDataPointsForOIDPath(""SUBJINI"",""SUBJID"",null,afpRecord.Subject)[0];
	 if (!CustomFunction.DataPointIsEmpty(primaryFormSubjectName))
	  subjNameDT.Enter(primaryFormSubjectName.Data, """", 0);
	}
	catch {}
}

return null;","15","C#","04/01/2021 03:22:07","04/01/2021 03:22:07","␀","0","␀","␀","␀","False","␀","a8c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"23","MAP_MEXICO_TO_GMT","var afp = (ActionFunctionParams)ThisObject;
var dataPoint = afp.ActionDataPoint;
var dateTime = DateTime.ParseExact(dataPoint.Data.ToString(), ""d M yyyy HH mm ss"", System.Globalization.CultureInfo.InvariantCulture);
var timeZoneId1 = 67;
var utc1 = Timezone.GetUtcFromLocalTime(dateTime, timeZoneId1);
var markingGroupId1 = 1;
dataPoint.OpenQuery(markingGroupId1, utc1.ToString(), false);
var timeZoneId2 = 74;
var utc2 = Timezone.GetUtcFromLocalTime(dateTime, timeZoneId2);
var markingGroupId2 = 1;
dataPoint.OpenQuery(markingGroupId2, utc2.ToString(), false);
return true;","15","C#","04/01/2021 03:22:07","04/01/2021 03:22:07","␀","0","04/01/2021 02:50:57","␀","04/01/2021 02:50:57","False","␀","a9c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"24","DSL_SQL_TEST","SELECT 1, 3
UNION ALL SELECT 2, 4
UNION ALL SELECT 3, 5","16","SQ","04/02/2021 04:08:39","04/02/2021 04:08:39","␀","0","01/16/2021 01:41:17","␀","01/16/2021 01:41:17","False","␀","aac392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"25","CREATE_SUBJECT","ActionFunctionParams afp = (ActionFunctionParams) ThisObject;
DataPoint dp = afp.ActionDataPoint;
Record record = dp.Record;
Subject subject = record.Subject;
StudySite sourceSite = subject.StudySite;
// create our new subject //
int nextNum = sourceSite.Subjects.Count + 1;
var newSubject = new Subject(sourceSite);
newSubject.Name = ""CF_Subject"" + nextNum.ToString();
newSubject.Save();
sourceSite.Subjects.Add(newSubject);
sourceSite.Subjects.SaveAllObjects();
DataPoint subjNameDT = record.DataPoints.FindByFieldOID(""CFCSGN"");
subjNameDT.Enter(newSubject.Name, """", 0);
return null;","16","C#","04/02/2021 04:08:39","04/02/2021 04:08:39","␀","0","␀","␀","␀","False","␀","abc392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"26","READ_SUBJECT_NAME","ActionFunctionParams afp = (ActionFunctionParams) ThisObject;
Record afpRecord = afp.ActionDataPoint.Record;

DataPoint subjNameDT = afpRecord.DataPoints.FindByFieldOID(""CFSNON"");
if (subjNameDT != null && subjNameDT.Active)
{
	try
	{
	 DataPoint primaryFormSubjectName = CustomFunction.FetchAllDataPointsForOIDPath(""SUBJINI"",""SUBJID"",null,afpRecord.Subject)[0];
	 if (!CustomFunction.DataPointIsEmpty(primaryFormSubjectName))
	  subjNameDT.Enter(primaryFormSubjectName.Data, """", 0);
	}
	catch {}
}

return null;","16","C#","04/02/2021 04:08:39","04/02/2021 04:08:39","␀","0","␀","␀","␀","False","␀","acc392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"27","MAP_MEXICO_TO_GMT","var afp = (ActionFunctionParams)ThisObject;
var dataPoint = afp.ActionDataPoint;
var dateTime = DateTime.ParseExact(dataPoint.Data.ToString(), ""d M yyyy HH mm ss"", System.Globalization.CultureInfo.InvariantCulture);
var timeZoneId1 = 67;
var utc1 = Timezone.GetUtcFromLocalTime(dateTime, timeZoneId1);
var markingGroupId1 = 1;
dataPoint.OpenQuery(markingGroupId1, utc1.ToString(), false);
var timeZoneId2 = 74;
var utc2 = Timezone.GetUtcFromLocalTime(dateTime, timeZoneId2);
var markingGroupId2 = 1;
dataPoint.OpenQuery(markingGroupId2, utc2.ToString(), false);
return true;","16","C#","04/02/2021 04:08:39","04/02/2021 04:08:39","␀","0","04/01/2021 02:50:57","␀","04/01/2021 02:50:57","False","␀","adc392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"28","DSL_SQL_TEST","SELECT 1, 3
UNION ALL SELECT 2, 4
UNION ALL SELECT 3, 5","17","SQ","04/06/2021 19:26:41","04/06/2021 19:26:41","␀","0","01/16/2021 01:41:17","␀","01/16/2021 01:41:17","False","␀","aec392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"29","CREATE_SUBJECT","ActionFunctionParams afp = (ActionFunctionParams) ThisObject;
DataPoint dp = afp.ActionDataPoint;
Record record = dp.Record;
Subject subject = record.Subject;
StudySite sourceSite = subject.StudySite;
// create our new subject //
int nextNum = sourceSite.Subjects.Count + 1;
var newSubject = new Subject(sourceSite);
newSubject.Name = ""CF_Subject"" + nextNum.ToString();
newSubject.Save();
sourceSite.Subjects.Add(newSubject);
sourceSite.Subjects.SaveAllObjects();
DataPoint subjNameDT = record.DataPoints.FindByFieldOID(""CFCSGN"");
subjNameDT.Enter(newSubject.Name, """", 0);
return null;","17","C#","04/06/2021 19:26:41","04/06/2021 19:26:41","␀","0","␀","␀","␀","False","␀","afc392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"30","READ_SUBJECT_NAME","ActionFunctionParams afp = (ActionFunctionParams) ThisObject;
Record afpRecord = afp.ActionDataPoint.Record;

DataPoint subjNameDT = afpRecord.DataPoints.FindByFieldOID(""CFSNON"");
if (subjNameDT != null && subjNameDT.Active)
{
	try
	{
	 DataPoint primaryFormSubjectName = CustomFunction.FetchAllDataPointsForOIDPath(""SUBJINI"",""SUBJID"",null,afpRecord.Subject)[0];
	 if (!CustomFunction.DataPointIsEmpty(primaryFormSubjectName))
	  subjNameDT.Enter(primaryFormSubjectName.Data, """", 0);
	}
	catch {}
}

return null;","17","C#","04/06/2021 19:26:41","04/06/2021 19:26:41","␀","0","␀","␀","␀","False","␀","b0c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"31","MAP_MEXICO_TO_GMT","var afp = (ActionFunctionParams)ThisObject;
var dataPoint = afp.ActionDataPoint;
var dateTime = DateTime.ParseExact(dataPoint.Data.ToString(), ""d M yyyy HH mm ss"", System.Globalization.CultureInfo.InvariantCulture);
var timeZoneId1 = 67;
var utc1 = Timezone.GetUtcFromLocalTime(dateTime, timeZoneId1);
var markingGroupId1 = 1;
dataPoint.OpenQuery(markingGroupId1, utc1.ToString(), false);
var timeZoneId2 = 74;
var utc2 = Timezone.GetUtcFromLocalTime(dateTime, timeZoneId2);
var markingGroupId2 = 1;
dataPoint.OpenQuery(markingGroupId2, utc2.ToString(), false);
return true;","17","C#","04/06/2021 19:26:41","04/06/2021 19:26:41","␀","0","04/01/2021 02:50:57","␀","04/01/2021 02:50:57","False","␀","b1c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"32","DSL_SQL_TEST","SELECT 1, 3
UNION ALL SELECT 2, 4
UNION ALL SELECT 3, 5","18","SQ","05/07/2021 15:12:00","05/07/2021 15:12:00","␀","0","01/16/2021 01:41:17","␀","01/16/2021 01:41:17","False","␀","b2c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"33","CREATE_SUBJECT","ActionFunctionParams afp = (ActionFunctionParams) ThisObject;
DataPoint dp = afp.ActionDataPoint;
Record record = dp.Record;
Subject subject = record.Subject;
StudySite sourceSite = subject.StudySite;
// create our new subject //
int nextNum = sourceSite.Subjects.Count + 1;
var newSubject = new Subject(sourceSite);
newSubject.Name = ""CF_Subject"" + nextNum.ToString();
newSubject.Save();
sourceSite.Subjects.Add(newSubject);
sourceSite.Subjects.SaveAllObjects();
DataPoint subjNameDT = record.DataPoints.FindByFieldOID(""CFCSGN"");
subjNameDT.Enter(newSubject.Name, """", 0);
return null;","18","C#","05/07/2021 15:12:00","05/07/2021 15:12:00","␀","0","␀","␀","␀","False","␀","b3c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"34","READ_SUBJECT_NAME","ActionFunctionParams afp = (ActionFunctionParams) ThisObject;
Record afpRecord = afp.ActionDataPoint.Record;

DataPoint subjNameDT = afpRecord.DataPoints.FindByFieldOID(""CFSNON"");
if (subjNameDT != null && subjNameDT.Active)
{
	try
	{
	 DataPoint primaryFormSubjectName = CustomFunction.FetchAllDataPointsForOIDPath(""SUBJINI"",""SUBJID"",null,afpRecord.Subject)[0];
	 if (!CustomFunction.DataPointIsEmpty(primaryFormSubjectName))
	  subjNameDT.Enter(primaryFormSubjectName.Data, """", 0);
	}
	catch {}
}

return null;","18","C#","05/07/2021 15:12:00","05/07/2021 15:12:00","␀","0","␀","␀","␀","False","␀","b4c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"35","MAP_MEXICO_TO_GMT","var afp = (ActionFunctionParams)ThisObject;
var dataPoint = afp.ActionDataPoint;
var dateTime = DateTime.ParseExact(dataPoint.Data.ToString(), ""d M yyyy HH mm ss"", System.Globalization.CultureInfo.InvariantCulture);
var timeZoneId1 = 67;
var utc1 = Timezone.GetUtcFromLocalTime(dateTime, timeZoneId1);
var markingGroupId1 = 1;
dataPoint.OpenQuery(markingGroupId1, utc1.ToString(), false);
var timeZoneId2 = 74;
var utc2 = Timezone.GetUtcFromLocalTime(dateTime, timeZoneId2);
var markingGroupId2 = 1;
dataPoint.OpenQuery(markingGroupId2, utc2.ToString(), false);
return true;","18","C#","05/07/2021 15:12:00","05/07/2021 15:12:00","␀","0","04/01/2021 02:50:57","␀","04/01/2021 02:50:57","False","␀","b5c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"36","DSL_SQL_TEST","SELECT 1, 3
UNION ALL SELECT 2, 4
UNION ALL SELECT 3, 5","19","SQ","06/14/2021 20:37:17","06/14/2021 20:37:17","␀","32","06/14/2021 20:37:17","␀","␀","True","␀","b6c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"37","CREATE_SUBJECT","ActionFunctionParams afp = (ActionFunctionParams) ThisObject;
DataPoint dp = afp.ActionDataPoint;
Record record = dp.Record;
Subject subject = record.Subject;
StudySite sourceSite = subject.StudySite;
// create our new subject //
int nextNum = sourceSite.Subjects.Count + 1;
var newSubject = new Subject(sourceSite);
newSubject.Name = ""CF_Subject"" + nextNum.ToString();
newSubject.Save();
sourceSite.Subjects.Add(newSubject);
sourceSite.Subjects.SaveAllObjects();
DataPoint subjNameDT = record.DataPoints.FindByFieldOID(""CFCSGN"");
subjNameDT.Enter(newSubject.Name, """", 0);
return null;","19","C#","06/14/2021 20:37:17","06/14/2021 20:37:17","␀","33","06/14/2021 20:37:17","␀","␀","True","␀","b7c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"38","READ_SUBJECT_NAME","ActionFunctionParams afp = (ActionFunctionParams) ThisObject;
Record afpRecord = afp.ActionDataPoint.Record;

DataPoint subjNameDT = afpRecord.DataPoints.FindByFieldOID(""CFSNON"");
if (subjNameDT != null && subjNameDT.Active)
{
	try
	{
	 DataPoint primaryFormSubjectName = CustomFunction.FetchAllDataPointsForOIDPath(""SUBJINI"",""SUBJID"",null,afpRecord.Subject)[0];
	 if (!CustomFunction.DataPointIsEmpty(primaryFormSubjectName))
	  subjNameDT.Enter(primaryFormSubjectName.Data, """", 0);
	}
	catch {}
}

return null;","19","C#","06/14/2021 20:37:17","06/14/2021 20:37:17","␀","34","06/14/2021 20:37:17","␀","␀","True","␀","b8c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"39","MAP_MEXICO_TO_GMT","var afp = (ActionFunctionParams)ThisObject;
var dataPoint = afp.ActionDataPoint;
var dateTime = DateTime.ParseExact(dataPoint.Data.ToString(), ""d M yyyy HH mm ss"", System.Globalization.CultureInfo.InvariantCulture);
var timeZoneId1 = 67;
var utc1 = Timezone.GetUtcFromLocalTime(dateTime, timeZoneId1);
var markingGroupId1 = 1;
dataPoint.OpenQuery(markingGroupId1, utc1.ToString(), false);
var timeZoneId2 = 74;
var utc2 = Timezone.GetUtcFromLocalTime(dateTime, timeZoneId2);
var markingGroupId2 = 1;
dataPoint.OpenQuery(markingGroupId2, utc2.ToString(), false);
return true;","19","C#","06/14/2021 20:37:17","06/14/2021 20:37:17","␀","35","06/14/2021 20:37:17","␀","␀","True","␀","b9c392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"40","DSL_SQL_TEST","SELECT 1, 3
UNION ALL SELECT 2, 4
UNION ALL SELECT 3, 5","20","SQ","06/14/2021 20:37:41","06/14/2021 20:37:41","␀","32","06/14/2021 20:37:17","␀","␀","False","␀","bac392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"41","CREATE_SUBJECT","ActionFunctionParams afp = (ActionFunctionParams) ThisObject;
DataPoint dp = afp.ActionDataPoint;
Record record = dp.Record;
Subject subject = record.Subject;
StudySite sourceSite = subject.StudySite;
// create our new subject //
int nextNum = sourceSite.Subjects.Count + 1;
var newSubject = new Subject(sourceSite);
newSubject.Name = ""CF_Subject"" + nextNum.ToString();
newSubject.Save();
sourceSite.Subjects.Add(newSubject);
sourceSite.Subjects.SaveAllObjects();
DataPoint subjNameDT = record.DataPoints.FindByFieldOID(""CFCSGN"");
subjNameDT.Enter(newSubject.Name, """", 0);
return null;","20","C#","06/14/2021 20:37:41","06/14/2021 20:37:41","␀","33","06/14/2021 20:37:17","␀","␀","False","␀","bbc392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"42","READ_SUBJECT_NAME","ActionFunctionParams afp = (ActionFunctionParams) ThisObject;
Record afpRecord = afp.ActionDataPoint.Record;

DataPoint subjNameDT = afpRecord.DataPoints.FindByFieldOID(""CFSNON"");
if (subjNameDT != null && subjNameDT.Active)
{
	try
	{
	 DataPoint primaryFormSubjectName = CustomFunction.FetchAllDataPointsForOIDPath(""SUBJINI"",""SUBJID"",null,afpRecord.Subject)[0];
	 if (!CustomFunction.DataPointIsEmpty(primaryFormSubjectName))
	  subjNameDT.Enter(primaryFormSubjectName.Data, """", 0);
	}
	catch {}
}

return null;","20","C#","06/14/2021 20:37:41","06/14/2021 20:37:41","␀","34","06/14/2021 20:37:17","␀","␀","False","␀","bcc392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"43","MAP_MEXICO_TO_GMT","var afp = (ActionFunctionParams)ThisObject;
var dataPoint = afp.ActionDataPoint;
var dateTime = DateTime.ParseExact(dataPoint.Data.ToString(), ""d M yyyy HH mm ss"", System.Globalization.CultureInfo.InvariantCulture);
var timeZoneId1 = 67;
var utc1 = Timezone.GetUtcFromLocalTime(dateTime, timeZoneId1);
var markingGroupId1 = 1;
dataPoint.OpenQuery(markingGroupId1, utc1.ToString(), false);
var timeZoneId2 = 74;
var utc2 = Timezone.GetUtcFromLocalTime(dateTime, timeZoneId2);
var markingGroupId2 = 1;
dataPoint.OpenQuery(markingGroupId2, utc2.ToString(), false);
return true;","20","C#","06/14/2021 20:37:41","06/14/2021 20:37:41","␀","35","06/14/2021 20:37:17","␀","␀","False","␀","bdc392a0-54d5-ec11-bfad-d89ef307b061","␀","␀"
"44","DSL_MEDHX","//Created: gkherani, Paradigm

        //Date: 12 FEB 2009

        //Custom Function: DSL_MEDHX

        //Edit Checks: DSL_MEDHX

        //Description: Set MH_DIAG_CD to a specific dictionary depending on the coded value chosen on field MH_BODY_SYS





        Medidata.Core.Objects.DynamicSearchParams DSP=(Medidata.Core.Objects.DynamicSearchParams) ThisObject;

        DataPoint dpDiag=DSP.DataPoint;



        //Variable Declaration Start -------

        string bodyFieldOid=""MH_BODY_SYS"";

        //Variable Declaration End -------



        Medidata.Utilities.KeyValueCollection KVC=new Medidata.Utilities.KeyValueCollection();

        DataPoint dpBody=dpDiag.Record.DataPoints.FindByFieldOID(bodyFieldOid);

        if(dpBody != null && dpBody.Data != string.Empty)

        {

            string dictOid=GetDictionaryOID(dpBody.Data);

            if(dictOid != string.Empty)

            {

                DataDictionary DD=DataDictionary.FetchByOID(dictOid, dpDiag.Record.Subject.CRFVersion.ID);

                if(DD != null)

                {

                    for(int i=0; i<DD.Entries.Count; i++)

                    {

                        DataDictionaryEntry DDE=DD.Entries[i];

                        if(DDE != null)

                        {

                            Medidata.Utilities.KeyValue KV1=new Medidata.Utilities.KeyValue(DDE.CodedData, DDE.Value);

                            KVC.Add(KV1);

                        }

                    }

                }

            }

        }

        return KVC;

    }

    string GetDictionaryOID(string data)

    {

        if(data == ""A"")

        return ""MH_EYE_EAR_NOSE_THROAT"";

        else if (data == ""B"")

        return ""MH_NEURO_PSYCHIATRIC_SYSTEM"";

        else if (data == ""C"")

        return ""MH_PULMONARY"";

        else if (data == ""D"")

        return ""MH_CARDIOVASCULAR"";

        else if (data == ""E"")

        return ""MH_MUSCULOSKELETAL"";

        else if (data == ""F"")

        return ""MH_BLOOD"";

        else if (data == ""G"")

        return ""MH_GASTROINTESTINAL"";

        else if (data == ""H"")

        return ""MH_METABOLIC"";

        else if (data == ""I"")

        return ""MH_GENITOURINARY"";

        else if (data == ""J"")

        return ""MH_WHOLE_BODY"";

        else if (data == ""Z"")

        return ""MH_OTHER"";

        return string.Empty;
","21","C#","08/08/2023 20:33:59","08/08/2023 20:33:59","␀","10377","08/08/2023 20:33:59","DSL_MEDHX","08/08/2023 20:33:59","True","DL5XT7XF2","c4f799e5-2a36-ee11-b6be-089204e95ce0","␀","␀"
"45","SubInSiteNumber","ActionFunctionParams afp = (ActionFunctionParams)ThisObject;
            DataPoint dp_input = afp.ActionDataPoint;
            Subject sub = dp_input.Record.Subject;

            string subjectid = sub.NumberInStudySite.ToString().PadLeft(3, '0');  

            DataPoint dp_ECFLD1 = dp_input.Record.DataPoints.FindByFieldOID(""ECFLD1"");

            if (dp_input.Active && dp_input.Data == ""1"")
            {
                dp_ECFLD1.Enter(subjectid, null, 0);
            }
            return null;
","21","C#","08/08/2023 20:33:59","08/08/2023 20:33:59","␀","10378","08/08/2023 20:33:59","SUBINSITENUMBER","08/08/2023 20:33:59","True","DL5XT7XF2","c5f799e5-2a36-ee11-b6be-089204e95ce0","␀","␀"
"48","DSL_MEDHX","//Created: gkherani, Paradigm

        //Date: 12 FEB 2009

        //Custom Function: DSL_MEDHX

        //Edit Checks: DSL_MEDHX

        //Description: Set MH_DIAG_CD to a specific dictionary depending on the coded value chosen on field MH_BODY_SYS





        Medidata.Core.Objects.DynamicSearchParams DSP=(Medidata.Core.Objects.DynamicSearchParams) ThisObject;

        DataPoint dpDiag=DSP.DataPoint;



        //Variable Declaration Start -------

        string bodyFieldOid=""MH_BODY_SYS"";

        //Variable Declaration End -------



        Medidata.Utilities.KeyValueCollection KVC=new Medidata.Utilities.KeyValueCollection();

        DataPoint dpBody=dpDiag.Record.DataPoints.FindByFieldOID(bodyFieldOid);

        if(dpBody != null && dpBody.Data != string.Empty)

        {

            string dictOid=GetDictionaryOID(dpBody.Data);

            if(dictOid != string.Empty)

            {

                DataDictionary DD=DataDictionary.FetchByOID(dictOid, dpDiag.Record.Subject.CRFVersion.ID);

                if(DD != null)

                {

                    for(int i=0; i<DD.Entries.Count; i++)

                    {

                        DataDictionaryEntry DDE=DD.Entries[i];

                        if(DDE != null)

                        {

                            Medidata.Utilities.KeyValue KV1=new Medidata.Utilities.KeyValue(DDE.CodedData, DDE.Value);

                            KVC.Add(KV1);

                        }

                    }

                }

            }

        }

        return KVC;

    }

    string GetDictionaryOID(string data)

    {

        if(data == ""A"")

        return ""MH_EYE_EAR_NOSE_THROAT"";

        else if (data == ""B"")

        return ""MH_NEURO_PSYCHIATRIC_SYSTEM"";

        else if (data == ""C"")

        return ""MH_PULMONARY"";

        else if (data == ""D"")

        return ""MH_CARDIOVASCULAR"";

        else if (data == ""E"")

        return ""MH_MUSCULOSKELETAL"";

        else if (data == ""F"")

        return ""MH_BLOOD"";

        else if (data == ""G"")

        return ""MH_GASTROINTESTINAL"";

        else if (data == ""H"")

        return ""MH_METABOLIC"";

        else if (data == ""I"")

        return ""MH_GENITOURINARY"";

        else if (data == ""J"")

        return ""MH_WHOLE_BODY"";

        else if (data == ""Z"")

        return ""MH_OTHER"";

        return string.Empty;
","23","C#","08/08/2023 21:15:14","08/08/2023 21:15:14","␀","10377","08/08/2023 21:15:14","DSL_MEDHX","08/08/2023 21:15:14","True","DL5XT7XF2","2124d8a9-3036-ee11-b6be-089204e95ce0","␀","␀"
"49","SubInSiteNumber","ActionFunctionParams afp = (ActionFunctionParams)ThisObject;
            DataPoint dp_input = afp.ActionDataPoint;
            Subject sub = dp_input.Record.Subject;

            string subjectid = sub.NumberInStudySite.ToString().PadLeft(3, '0');  

            DataPoint dp_ECFLD1 = dp_input.Record.DataPoints.FindByFieldOID(""ECFLD1"");

            if (dp_input.Active && (dp_input.Data == ""2"" || dp_input.Data == ""3""))
            {
                dp_ECFLD1.Enter(subjectid, null, 0);
            }
            return null;","23","C#","08/08/2023 21:15:14","09/07/2023 19:30:33","␀","10378","08/08/2023 21:15:14","SUBINSITENUMBER","09/07/2023 19:30:33","True","DL5XT7XF2","2224d8a9-3036-ee11-b6be-089204e95ce0","␀","␀"
"50","DSL_MEDHX","//Created: gkherani, Paradigm

        //Date: 12 FEB 2009

        //Custom Function: DSL_MEDHX

        //Edit Checks: DSL_MEDHX

        //Description: Set MH_DIAG_CD to a specific dictionary depending on the coded value chosen on field MH_BODY_SYS





        Medidata.Core.Objects.DynamicSearchParams DSP=(Medidata.Core.Objects.DynamicSearchParams) ThisObject;

        DataPoint dpDiag=DSP.DataPoint;



        //Variable Declaration Start -------

        string bodyFieldOid=""MH_BODY_SYS"";

        //Variable Declaration End -------



        Medidata.Utilities.KeyValueCollection KVC=new Medidata.Utilities.KeyValueCollection();

        DataPoint dpBody=dpDiag.Record.DataPoints.FindByFieldOID(bodyFieldOid);

        if(dpBody != null && dpBody.Data != string.Empty)

        {

            string dictOid=GetDictionaryOID(dpBody.Data);

            if(dictOid != string.Empty)

            {

                DataDictionary DD=DataDictionary.FetchByOID(dictOid, dpDiag.Record.Subject.CRFVersion.ID);

                if(DD != null)

                {

                    for(int i=0; i<DD.Entries.Count; i++)

                    {

                        DataDictionaryEntry DDE=DD.Entries[i];

                        if(DDE != null)

                        {

                            Medidata.Utilities.KeyValue KV1=new Medidata.Utilities.KeyValue(DDE.CodedData, DDE.Value);

                            KVC.Add(KV1);

                        }

                    }

                }

            }

        }

        return KVC;

    }

    string GetDictionaryOID(string data)

    {

        if(data == ""A"")

        return ""MH_EYE_EAR_NOSE_THROAT"";

        else if (data == ""B"")

        return ""MH_NEURO_PSYCHIATRIC_SYSTEM"";

        else if (data == ""C"")

        return ""MH_PULMONARY"";

        else if (data == ""D"")

        return ""MH_CARDIOVASCULAR"";

        else if (data == ""E"")

        return ""MH_MUSCULOSKELETAL"";

        else if (data == ""F"")

        return ""MH_BLOOD"";

        else if (data == ""G"")

        return ""MH_GASTROINTESTINAL"";

        else if (data == ""H"")

        return ""MH_METABOLIC"";

        else if (data == ""I"")

        return ""MH_GENITOURINARY"";

        else if (data == ""J"")

        return ""MH_WHOLE_BODY"";

        else if (data == ""Z"")

        return ""MH_OTHER"";

        return string.Empty;
","24","C#","08/08/2023 21:15:38","08/08/2023 21:15:38","␀","10377","08/08/2023 21:15:14","␀","08/08/2023 21:15:14","False","␀","5b8379b8-3036-ee11-b6be-089204e95ce0","␀","␀"
"51","SubInSiteNumber","ActionFunctionParams afp = (ActionFunctionParams)ThisObject;
            DataPoint dp_input = afp.ActionDataPoint;
            Subject sub = dp_input.Record.Subject;

            string subjectid = sub.NumberInStudySite.ToString().PadLeft(3, '0');  

            DataPoint dp_ECFLD1 = dp_input.Record.DataPoints.FindByFieldOID(""ECFLD1"");

            if (dp_input.Active && dp_input.Data == ""1"")
            {
                dp_ECFLD1.Enter(subjectid, null, 0);
            }
            return null;
","24","C#","08/08/2023 21:15:38","08/08/2023 21:15:38","␀","10378","08/08/2023 21:15:14","␀","08/08/2023 21:15:14","False","␀","5c8379b8-3036-ee11-b6be-089204e95ce0","␀","␀"
"52","DSL_MEDHX","//Created: gkherani, Paradigm

        //Date: 12 FEB 2009

        //Custom Function: DSL_MEDHX

        //Edit Checks: DSL_MEDHX

        //Description: Set MH_DIAG_CD to a specific dictionary depending on the coded value chosen on field MH_BODY_SYS





        Medidata.Core.Objects.DynamicSearchParams DSP=(Medidata.Core.Objects.DynamicSearchParams) ThisObject;

        DataPoint dpDiag=DSP.DataPoint;



        //Variable Declaration Start -------

        string bodyFieldOid=""MH_BODY_SYS"";

        //Variable Declaration End -------



        Medidata.Utilities.KeyValueCollection KVC=new Medidata.Utilities.KeyValueCollection();

        DataPoint dpBody=dpDiag.Record.DataPoints.FindByFieldOID(bodyFieldOid);

        if(dpBody != null && dpBody.Data != string.Empty)

        {

            string dictOid=GetDictionaryOID(dpBody.Data);

            if(dictOid != string.Empty)

            {

                DataDictionary DD=DataDictionary.FetchByOID(dictOid, dpDiag.Record.Subject.CRFVersion.ID);

                if(DD != null)

                {

                    for(int i=0; i<DD.Entries.Count; i++)

                    {

                        DataDictionaryEntry DDE=DD.Entries[i];

                        if(DDE != null)

                        {

                            Medidata.Utilities.KeyValue KV1=new Medidata.Utilities.KeyValue(DDE.CodedData, DDE.Value);

                            KVC.Add(KV1);

                        }

                    }

                }

            }

        }

        return KVC;

    }

    string GetDictionaryOID(string data)

    {

        if(data == ""A"")

        return ""MH_EYE_EAR_NOSE_THROAT"";

        else if (data == ""B"")

        return ""MH_NEURO_PSYCHIATRIC_SYSTEM"";

        else if (data == ""C"")

        return ""MH_PULMONARY"";

        else if (data == ""D"")

        return ""MH_CARDIOVASCULAR"";

        else if (data == ""E"")

        return ""MH_MUSCULOSKELETAL"";

        else if (data == ""F"")

        return ""MH_BLOOD"";

        else if (data == ""G"")

        return ""MH_GASTROINTESTINAL"";

        else if (data == ""H"")

        return ""MH_METABOLIC"";

        else if (data == ""I"")

        return ""MH_GENITOURINARY"";

        else if (data == ""J"")

        return ""MH_WHOLE_BODY"";

        else if (data == ""Z"")

        return ""MH_OTHER"";

        return string.Empty;
","25","C#","08/08/2023 21:18:22","08/08/2023 21:18:22","␀","10377","08/08/2023 21:15:14","␀","08/08/2023 21:15:14","False","␀","a2a69914-3136-ee11-b6be-089204e95ce0","␀","␀"
"53","SubInSiteNumber","ActionFunctionParams afp = (ActionFunctionParams)ThisObject;
            DataPoint dp_input = afp.ActionDataPoint;
            Subject sub = dp_input.Record.Subject;

            string subjectid = sub.NumberInStudySite.ToString().PadLeft(3, '0');  

            DataPoint dp_ECFLD1 = dp_input.Record.DataPoints.FindByFieldOID(""ECFLD1"");

            if (dp_input.Active && dp_input.Data == ""2"")
            {
                dp_ECFLD1.Enter(subjectid, null, 0);
            }
            return null;","25","C#","08/08/2023 21:18:22","08/08/2023 21:18:22","␀","10378","08/08/2023 21:15:14","␀","08/08/2023 21:18:13","False","␀","a3a69914-3136-ee11-b6be-089204e95ce0","␀","␀"
"54","DSL_MEDHX","//Created: gkherani, Paradigm

        //Date: 12 FEB 2009

        //Custom Function: DSL_MEDHX

        //Edit Checks: DSL_MEDHX

        //Description: Set MH_DIAG_CD to a specific dictionary depending on the coded value chosen on field MH_BODY_SYS





        Medidata.Core.Objects.DynamicSearchParams DSP=(Medidata.Core.Objects.DynamicSearchParams) ThisObject;

        DataPoint dpDiag=DSP.DataPoint;



        //Variable Declaration Start -------

        string bodyFieldOid=""MH_BODY_SYS"";

        //Variable Declaration End -------



        Medidata.Utilities.KeyValueCollection KVC=new Medidata.Utilities.KeyValueCollection();

        DataPoint dpBody=dpDiag.Record.DataPoints.FindByFieldOID(bodyFieldOid);

        if(dpBody != null && dpBody.Data != string.Empty)

        {

            string dictOid=GetDictionaryOID(dpBody.Data);

            if(dictOid != string.Empty)

            {

                DataDictionary DD=DataDictionary.FetchByOID(dictOid, dpDiag.Record.Subject.CRFVersion.ID);

                if(DD != null)

                {

                    for(int i=0; i<DD.Entries.Count; i++)

                    {

                        DataDictionaryEntry DDE=DD.Entries[i];

                        if(DDE != null)

                        {

                            Medidata.Utilities.KeyValue KV1=new Medidata.Utilities.KeyValue(DDE.CodedData, DDE.Value);

                            KVC.Add(KV1);

                        }

                    }

                }

            }

        }

        return KVC;

    }

    string GetDictionaryOID(string data)

    {

        if(data == ""A"")

        return ""MH_EYE_EAR_NOSE_THROAT"";

        else if (data == ""B"")

        return ""MH_NEURO_PSYCHIATRIC_SYSTEM"";

        else if (data == ""C"")

        return ""MH_PULMONARY"";

        else if (data == ""D"")

        return ""MH_CARDIOVASCULAR"";

        else if (data == ""E"")

        return ""MH_MUSCULOSKELETAL"";

        else if (data == ""F"")

        return ""MH_BLOOD"";

        else if (data == ""G"")

        return ""MH_GASTROINTESTINAL"";

        else if (data == ""H"")

        return ""MH_METABOLIC"";

        else if (data == ""I"")

        return ""MH_GENITOURINARY"";

        else if (data == ""J"")

        return ""MH_WHOLE_BODY"";

        else if (data == ""Z"")

        return ""MH_OTHER"";

        return string.Empty;
","26","C#","09/07/2023 19:15:16","09/07/2023 19:15:16","␀","10377","08/08/2023 21:15:14","␀","08/08/2023 21:15:14","False","␀","468645e0-b24d-ee11-b6c1-089204e95ce0","␀","␀"
"55","SubInSiteNumber","ActionFunctionParams afp = (ActionFunctionParams)ThisObject;
            DataPoint dp_input = afp.ActionDataPoint;
            Subject sub = dp_input.Record.Subject;

            string subjectid = sub.NumberInStudySite.ToString().PadLeft(3, '0');  

            DataPoint dp_ECFLD1 = dp_input.Record.DataPoints.FindByFieldOID(""ECFLD1"");

            if (dp_input.Active && dp_input.Data == ""2"")
            {
                dp_ECFLD1.Enter(subjectid, null, 0);
            }
            return null;","26","C#","09/07/2023 19:15:16","09/07/2023 19:15:16","␀","10378","08/08/2023 21:15:14","␀","08/08/2023 21:18:13","False","␀","478645e0-b24d-ee11-b6c1-089204e95ce0","␀","␀"
"56","DSL_MEDHX","//Created: gkherani, Paradigm

        //Date: 12 FEB 2009

        //Custom Function: DSL_MEDHX

        //Edit Checks: DSL_MEDHX

        //Description: Set MH_DIAG_CD to a specific dictionary depending on the coded value chosen on field MH_BODY_SYS





        Medidata.Core.Objects.DynamicSearchParams DSP=(Medidata.Core.Objects.DynamicSearchParams) ThisObject;

        DataPoint dpDiag=DSP.DataPoint;



        //Variable Declaration Start -------

        string bodyFieldOid=""MH_BODY_SYS"";

        //Variable Declaration End -------



        Medidata.Utilities.KeyValueCollection KVC=new Medidata.Utilities.KeyValueCollection();

        DataPoint dpBody=dpDiag.Record.DataPoints.FindByFieldOID(bodyFieldOid);

        if(dpBody != null && dpBody.Data != string.Empty)

        {

            string dictOid=GetDictionaryOID(dpBody.Data);

            if(dictOid != string.Empty)

            {

                DataDictionary DD=DataDictionary.FetchByOID(dictOid, dpDiag.Record.Subject.CRFVersion.ID);

                if(DD != null)

                {

                    for(int i=0; i<DD.Entries.Count; i++)

                    {

                        DataDictionaryEntry DDE=DD.Entries[i];

                        if(DDE != null)

                        {

                            Medidata.Utilities.KeyValue KV1=new Medidata.Utilities.KeyValue(DDE.CodedData, DDE.Value);

                            KVC.Add(KV1);

                        }

                    }

                }

            }

        }

        return KVC;

    }

    string GetDictionaryOID(string data)

    {

        if(data == ""A"")

        return ""MH_EYE_EAR_NOSE_THROAT"";

        else if (data == ""B"")

        return ""MH_NEURO_PSYCHIATRIC_SYSTEM"";

        else if (data == ""C"")

        return ""MH_PULMONARY"";

        else if (data == ""D"")

        return ""MH_CARDIOVASCULAR"";

        else if (data == ""E"")

        return ""MH_MUSCULOSKELETAL"";

        else if (data == ""F"")

        return ""MH_BLOOD"";

        else if (data == ""G"")

        return ""MH_GASTROINTESTINAL"";

        else if (data == ""H"")

        return ""MH_METABOLIC"";

        else if (data == ""I"")

        return ""MH_GENITOURINARY"";

        else if (data == ""J"")

        return ""MH_WHOLE_BODY"";

        else if (data == ""Z"")

        return ""MH_OTHER"";

        return string.Empty;
","27","C#","09/07/2023 19:21:42","09/07/2023 19:21:42","␀","10377","08/08/2023 20:33:59","␀","08/08/2023 20:33:59","False","␀","e30f91c3-b34d-ee11-b6c1-089204e95ce0","␀","␀"
"57","SubInSiteNumber","ActionFunctionParams afp = (ActionFunctionParams)ThisObject;
            DataPoint dp_input = afp.ActionDataPoint;
            Subject sub = dp_input.Record.Subject;

            string subjectid = sub.NumberInStudySite.ToString().PadLeft(3, '0');  

            DataPoint dp_ECFLD1 = dp_input.Record.DataPoints.FindByFieldOID(""ECFLD1"");

            if (dp_input.Active && dp_input.Data == ""1"")
            {
                dp_ECFLD1.Enter(subjectid, null, 0);
            }
            return null;
","27","C#","09/07/2023 19:21:42","09/07/2023 19:21:42","␀","10378","08/08/2023 20:33:59","␀","08/08/2023 20:33:59","False","␀","e40f91c3-b34d-ee11-b6c1-089204e95ce0","␀","␀"
"58","DSL_MEDHX","//Created: gkherani, Paradigm

        //Date: 12 FEB 2009

        //Custom Function: DSL_MEDHX

        //Edit Checks: DSL_MEDHX

        //Description: Set MH_DIAG_CD to a specific dictionary depending on the coded value chosen on field MH_BODY_SYS





        Medidata.Core.Objects.DynamicSearchParams DSP=(Medidata.Core.Objects.DynamicSearchParams) ThisObject;

        DataPoint dpDiag=DSP.DataPoint;



        //Variable Declaration Start -------

        string bodyFieldOid=""MH_BODY_SYS"";

        //Variable Declaration End -------



        Medidata.Utilities.KeyValueCollection KVC=new Medidata.Utilities.KeyValueCollection();

        DataPoint dpBody=dpDiag.Record.DataPoints.FindByFieldOID(bodyFieldOid);

        if(dpBody != null && dpBody.Data != string.Empty)

        {

            string dictOid=GetDictionaryOID(dpBody.Data);

            if(dictOid != string.Empty)

            {

                DataDictionary DD=DataDictionary.FetchByOID(dictOid, dpDiag.Record.Subject.CRFVersion.ID);

                if(DD != null)

                {

                    for(int i=0; i<DD.Entries.Count; i++)

                    {

                        DataDictionaryEntry DDE=DD.Entries[i];

                        if(DDE != null)

                        {

                            Medidata.Utilities.KeyValue KV1=new Medidata.Utilities.KeyValue(DDE.CodedData, DDE.Value);

                            KVC.Add(KV1);

                        }

                    }

                }

            }

        }

        return KVC;

    }

    string GetDictionaryOID(string data)

    {

        if(data == ""A"")

        return ""MH_EYE_EAR_NOSE_THROAT"";

        else if (data == ""B"")

        return ""MH_NEURO_PSYCHIATRIC_SYSTEM"";

        else if (data == ""C"")

        return ""MH_PULMONARY"";

        else if (data == ""D"")

        return ""MH_CARDIOVASCULAR"";

        else if (data == ""E"")

        return ""MH_MUSCULOSKELETAL"";

        else if (data == ""F"")

        return ""MH_BLOOD"";

        else if (data == ""G"")

        return ""MH_GASTROINTESTINAL"";

        else if (data == ""H"")

        return ""MH_METABOLIC"";

        else if (data == ""I"")

        return ""MH_GENITOURINARY"";

        else if (data == ""J"")

        return ""MH_WHOLE_BODY"";

        else if (data == ""Z"")

        return ""MH_OTHER"";

        return string.Empty;
","28","C#","09/07/2023 19:25:51","09/07/2023 19:25:51","␀","10377","08/08/2023 21:15:14","␀","08/08/2023 21:15:14","False","␀","c83b675a-b44d-ee11-b6c1-089204e95ce0","␀","␀"
"59","SubInSiteNumber","ActionFunctionParams afp = (ActionFunctionParams)ThisObject;
            DataPoint dp_input = afp.ActionDataPoint;
            Subject sub = dp_input.Record.Subject;

            string subjectid = sub.NumberInStudySite.ToString().PadLeft(3, '0');  

            DataPoint dp_ECFLD1 = dp_input.Record.DataPoints.FindByFieldOID(""ECFLD1"");

            if (dp_input.Active && dp_input.Data == ""2"")
            {
                dp_ECFLD1.Enter(subjectid, null, 0);
            }
            return null;","28","C#","09/07/2023 19:25:51","09/07/2023 19:25:51","␀","10378","08/08/2023 21:15:14","␀","08/08/2023 21:18:13","False","␀","c93b675a-b44d-ee11-b6c1-089204e95ce0","␀","␀"
"60","DSL_MEDHX","//Created: gkherani, Paradigm

        //Date: 12 FEB 2009

        //Custom Function: DSL_MEDHX

        //Edit Checks: DSL_MEDHX

        //Description: Set MH_DIAG_CD to a specific dictionary depending on the coded value chosen on field MH_BODY_SYS





        Medidata.Core.Objects.DynamicSearchParams DSP=(Medidata.Core.Objects.DynamicSearchParams) ThisObject;

        DataPoint dpDiag=DSP.DataPoint;



        //Variable Declaration Start -------

        string bodyFieldOid=""MH_BODY_SYS"";

        //Variable Declaration End -------



        Medidata.Utilities.KeyValueCollection KVC=new Medidata.Utilities.KeyValueCollection();

        DataPoint dpBody=dpDiag.Record.DataPoints.FindByFieldOID(bodyFieldOid);

        if(dpBody != null && dpBody.Data != string.Empty)

        {

            string dictOid=GetDictionaryOID(dpBody.Data);

            if(dictOid != string.Empty)

            {

                DataDictionary DD=DataDictionary.FetchByOID(dictOid, dpDiag.Record.Subject.CRFVersion.ID);

                if(DD != null)

                {

                    for(int i=0; i<DD.Entries.Count; i++)

                    {

                        DataDictionaryEntry DDE=DD.Entries[i];

                        if(DDE != null)

                        {

                            Medidata.Utilities.KeyValue KV1=new Medidata.Utilities.KeyValue(DDE.CodedData, DDE.Value);

                            KVC.Add(KV1);

                        }

                    }

                }

            }

        }

        return KVC;

    }

    string GetDictionaryOID(string data)

    {

        if(data == ""A"")

        return ""MH_EYE_EAR_NOSE_THROAT"";

        else if (data == ""B"")

        return ""MH_NEURO_PSYCHIATRIC_SYSTEM"";

        else if (data == ""C"")

        return ""MH_PULMONARY"";

        else if (data == ""D"")

        return ""MH_CARDIOVASCULAR"";

        else if (data == ""E"")

        return ""MH_MUSCULOSKELETAL"";

        else if (data == ""F"")

        return ""MH_BLOOD"";

        else if (data == ""G"")

        return ""MH_GASTROINTESTINAL"";

        else if (data == ""H"")

        return ""MH_METABOLIC"";

        else if (data == ""I"")

        return ""MH_GENITOURINARY"";

        else if (data == ""J"")

        return ""MH_WHOLE_BODY"";

        else if (data == ""Z"")

        return ""MH_OTHER"";

        return string.Empty;
","29","C#","09/07/2023 19:31:03","09/07/2023 19:31:03","␀","10377","08/08/2023 21:15:14","␀","08/08/2023 21:15:14","False","␀","fdbc9c14-b54d-ee11-b6c1-089204e95ce0","␀","␀"
"61","SubInSiteNumber","ActionFunctionParams afp = (ActionFunctionParams)ThisObject;
            DataPoint dp_input = afp.ActionDataPoint;
            Subject sub = dp_input.Record.Subject;

            string subjectid = sub.NumberInStudySite.ToString().PadLeft(3, '0');  

            DataPoint dp_ECFLD1 = dp_input.Record.DataPoints.FindByFieldOID(""ECFLD1"");

            if (dp_input.Active && (dp_input.Data == ""2"" || dp_input.Data == ""3""))
            {
                dp_ECFLD1.Enter(subjectid, null, 0);
            }
            return null;","29","C#","09/07/2023 19:31:03","09/07/2023 19:31:03","␀","10378","08/08/2023 21:15:14","␀","09/07/2023 19:30:33","False","␀","febc9c14-b54d-ee11-b6c1-089204e95ce0","␀","␀"
"62","DSL_MEDHX","//Created: gkherani, Paradigm

        //Date: 12 FEB 2009

        //Custom Function: DSL_MEDHX

        //Edit Checks: DSL_MEDHX

        //Description: Set MH_DIAG_CD to a specific dictionary depending on the coded value chosen on field MH_BODY_SYS





        Medidata.Core.Objects.DynamicSearchParams DSP=(Medidata.Core.Objects.DynamicSearchParams) ThisObject;

        DataPoint dpDiag=DSP.DataPoint;



        //Variable Declaration Start -------

        string bodyFieldOid=""MH_BODY_SYS"";

        //Variable Declaration End -------



        Medidata.Utilities.KeyValueCollection KVC=new Medidata.Utilities.KeyValueCollection();

        DataPoint dpBody=dpDiag.Record.DataPoints.FindByFieldOID(bodyFieldOid);

        if(dpBody != null && dpBody.Data != string.Empty)

        {

            string dictOid=GetDictionaryOID(dpBody.Data);

            if(dictOid != string.Empty)

            {

                DataDictionary DD=DataDictionary.FetchByOID(dictOid, dpDiag.Record.Subject.CRFVersion.ID);

                if(DD != null)

                {

                    for(int i=0; i<DD.Entries.Count; i++)

                    {

                        DataDictionaryEntry DDE=DD.Entries[i];

                        if(DDE != null)

                        {

                            Medidata.Utilities.KeyValue KV1=new Medidata.Utilities.KeyValue(DDE.CodedData, DDE.Value);

                            KVC.Add(KV1);

                        }

                    }

                }

            }

        }

        return KVC;

    }

    string GetDictionaryOID(string data)

    {

        if(data == ""A"")

        return ""MH_EYE_EAR_NOSE_THROAT"";

        else if (data == ""B"")

        return ""MH_NEURO_PSYCHIATRIC_SYSTEM"";

        else if (data == ""C"")

        return ""MH_PULMONARY"";

        else if (data == ""D"")

        return ""MH_CARDIOVASCULAR"";

        else if (data == ""E"")

        return ""MH_MUSCULOSKELETAL"";

        else if (data == ""F"")

        return ""MH_BLOOD"";

        else if (data == ""G"")

        return ""MH_GASTROINTESTINAL"";

        else if (data == ""H"")

        return ""MH_METABOLIC"";

        else if (data == ""I"")

        return ""MH_GENITOURINARY"";

        else if (data == ""J"")

        return ""MH_WHOLE_BODY"";

        else if (data == ""Z"")

        return ""MH_OTHER"";

        return string.Empty;
","30","C#","09/11/2023 13:46:28","09/11/2023 13:46:28","␀","60","09/11/2023 13:46:28","␀","␀","True","␀","ee302d9b-a950-ee11-b6c1-089204e95ce0","␀","␀"
"63","SubInSiteNumber","ActionFunctionParams afp = (ActionFunctionParams)ThisObject;
            DataPoint dp_input = afp.ActionDataPoint;
            Subject sub = dp_input.Record.Subject;

            string subjectid = sub.NumberInStudySite.ToString().PadLeft(3, '0');  

            DataPoint dp_ECFLD1 = dp_input.Record.DataPoints.FindByFieldOID(""ECFLD1"");

            if (dp_input.Active && (dp_input.Data == ""2"" || dp_input.Data == ""3""))
            {
                dp_ECFLD1.Enter(subjectid, null, 0);
            }
            return null;","30","C#","09/11/2023 13:46:28","09/11/2023 13:46:28","␀","61","09/11/2023 13:46:28","␀","␀","True","␀","ef302d9b-a950-ee11-b6c1-089204e95ce0","␀","␀"
"64","DSL_MEDHX","//Created: gkherani, Paradigm

        //Date: 12 FEB 2009

        //Custom Function: DSL_MEDHX

        //Edit Checks: DSL_MEDHX

        //Description: Set MH_DIAG_CD to a specific dictionary depending on the coded value chosen on field MH_BODY_SYS





        Medidata.Core.Objects.DynamicSearchParams DSP=(Medidata.Core.Objects.DynamicSearchParams) ThisObject;

        DataPoint dpDiag=DSP.DataPoint;



        //Variable Declaration Start -------

        string bodyFieldOid=""MH_BODY_SYS"";

        //Variable Declaration End -------



        Medidata.Utilities.KeyValueCollection KVC=new Medidata.Utilities.KeyValueCollection();

        DataPoint dpBody=dpDiag.Record.DataPoints.FindByFieldOID(bodyFieldOid);

        if(dpBody != null && dpBody.Data != string.Empty)

        {

            string dictOid=GetDictionaryOID(dpBody.Data);

            if(dictOid != string.Empty)

            {

                DataDictionary DD=DataDictionary.FetchByOID(dictOid, dpDiag.Record.Subject.CRFVersion.ID);

                if(DD != null)

                {

                    for(int i=0; i<DD.Entries.Count; i++)

                    {

                        DataDictionaryEntry DDE=DD.Entries[i];

                        if(DDE != null)

                        {

                            Medidata.Utilities.KeyValue KV1=new Medidata.Utilities.KeyValue(DDE.CodedData, DDE.Value);

                            KVC.Add(KV1);

                        }

                    }

                }

            }

        }

        return KVC;

    }

    string GetDictionaryOID(string data)

    {

        if(data == ""A"")

        return ""MH_EYE_EAR_NOSE_THROAT"";

        else if (data == ""B"")

        return ""MH_NEURO_PSYCHIATRIC_SYSTEM"";

        else if (data == ""C"")

        return ""MH_PULMONARY"";

        else if (data == ""D"")

        return ""MH_CARDIOVASCULAR"";

        else if (data == ""E"")

        return ""MH_MUSCULOSKELETAL"";

        else if (data == ""F"")

        return ""MH_BLOOD"";

        else if (data == ""G"")

        return ""MH_GASTROINTESTINAL"";

        else if (data == ""H"")

        return ""MH_METABOLIC"";

        else if (data == ""I"")

        return ""MH_GENITOURINARY"";

        else if (data == ""J"")

        return ""MH_WHOLE_BODY"";

        else if (data == ""Z"")

        return ""MH_OTHER"";

        return string.Empty;
","31","C#","09/11/2023 13:51:24","09/11/2023 13:51:24","␀","60","09/11/2023 13:46:28","␀","␀","False","␀","d229714b-aa50-ee11-b6c1-089204e95ce0","␀","␀"
"65","SubInSiteNumber","ActionFunctionParams afp = (ActionFunctionParams)ThisObject;
            DataPoint dp_input = afp.ActionDataPoint;
            Subject sub = dp_input.Record.Subject;

            string subjectid = sub.NumberInStudySite.ToString().PadLeft(3, '0');  

            DataPoint dp_ECFLD1 = dp_input.Record.DataPoints.FindByFieldOID(""ECFLD1"");

            if (dp_input.Active && (dp_input.Data == ""2"" || dp_input.Data == ""3""))
            {
                dp_ECFLD1.Enter(subjectid, null, 0);
            }
            return null;","31","C#","09/11/2023 13:51:24","09/11/2023 13:51:24","␀","61","09/11/2023 13:46:28","␀","␀","False","␀","d329714b-aa50-ee11-b6c1-089204e95ce0","␀","␀"
